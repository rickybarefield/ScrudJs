// Generated by CoffeeScript 1.3.3
(function() {
  var WebSocket, WebSocketClient,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WebSocketClient = require('websocket').client;

  WebSocket = (function() {

    function WebSocket(uri) {
      this.send = __bind(this.send, this);

      var doOpen, self,
        _this = this;
      self = this;
      this.socket = new WebSocketClient();
      doOpen = function(connection) {
        var handleMessage,
          _this = this;
        handleMessage = function(message) {
          if ((this.onmessage != null) && message.type === 'utf8') {
            return this.onmessage.call(this, message.utf8Data);
          } else {
            return console.log("onmessage was not defined so could not be called");
          }
        };
        self.connection = connection;
        if ((self.onopen != null)) {
          self.onopen.call(arguments);
        } else {
          console.log("onopen was not defined so could not be called");
        }
        connection.on('message', function() {
          return handleMessage.apply(_this, arguments);
        });
        return connection.on('close', function() {
          if ((_this.onclose != null)) {
            return _this.onclose.apply(_this, arguments);
          } else {
            return console.log("onclose was not defined so could not be called");
          }
        });
      };
      this.socket.on('connect', function() {
        return doOpen.apply(self, arguments);
      });
      this.socket.connect(uri);
    }

    WebSocket.prototype.send = function(message) {
      return this.connection.sendUTF(message);
    };

    return WebSocket;

  })();

  global.WebSocket = WebSocket;

}).call(this);
