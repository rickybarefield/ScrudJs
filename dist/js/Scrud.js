// Generated by CoffeeScript 1.3.3
(function() {
  var Create, Scrud,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Create = require("./ScrudCreate");

  module.exports = Scrud = (function() {
    var generateClientId, receiveMessage;

    generateClientId = function() {
      this.currentClientId++;
      return "cId-" + this.currentClientId;
    };

    function Scrud(websocketAddress) {
      var self;
      this.websocketAddress = websocketAddress;
      this.connect = __bind(this.connect, this);

      self = this;
      this.clientIdMap = {};
      this.currentClientId = 1;
      this.Create = function() {
        var clientId;
        Create.apply(this, arguments);
        this.Scrud = self;
        clientId = generateClientId.call(self);
        this.clientId = clientId;
        self.clientIdMap[clientId] = this;
        return this;
      };
      this.Create.prototype = Create.prototype;
    }

    receiveMessage = function(message) {
      var json, messagesClientId;
      json = JSON.parse(message);
      messagesClientId = json['client-id'];
      return this.clientIdMap[messagesClientId].handle(json);
    };

    Scrud.prototype.connect = function() {
      var self;
      self = this;
      this.websocket = new WebSocket(this.websocketAddress);
      return this.websocket.onmessage = function() {
        return receiveMessage.apply(self, arguments);
      };
    };

    Scrud.prototype.send = function(object) {
      return this.websocket.send(JSON.stringify(object));
    };

    return Scrud;

  })();

}).call(this);
